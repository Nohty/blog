package pages

import "github.com/Nohty/blog/model"
import "github.com/Nohty/blog/view/layout"
import "github.com/Nohty/blog/view/components"
import "strings"
import "slices"

func GetUniqueCategories(posts []model.BlogPost) []string {
	var categories []string

	for _, post := range posts {
		for _, category := range strings.Split(post.Category, ",") {
			if !slices.Contains(categories, category) {
				categories = append(categories, category)
			}
		}
	}

	return categories
}

templ Blog(user model.User, posts []model.BlogPost) {
	@layout.Base() {
		<main class="dark flex flex-col items-center justify-center min-h-screen py-2 bg-gray-900 text-white">
			<div class="container px-4 md:px-6">
				<div class="flex flex-col items-center justify-center space-y-4 text-center">
					<div class="space-y-2">
						<h1 class="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none">Blog</h1>
						<p class="max-w-[900px] text-gray-300 md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed">Stay updated with the latest news and insights from our team.</p>
					</div>
					<div class="w-full max-w-md mx-auto mt-4 flex items-center gap-4">
						<label class="sr-only" for="search">Search</label>
						<input class="w-full h-10 px-3 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline bg-gray-800 text-white" id="search" placeholder="Search..." type="text"/>
						<label class="sr-only" for="filter">Filter by category</label>
						<select class="w-full h-10 px-3 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline bg-gray-800 text-white" id="filter">
							<option>All Categories</option>
							for _, category := range GetUniqueCategories(posts) {
								<option>{ category }</option>
							}
						</select>
					</div>
				</div>
				<div class="mx-auto grid max-w-sm items-start gap-8 sm:max-w-4xl sm:grid-cols-2 md:gap-12 lg:max-w-5xl lg:grid-cols-3 mt-8">
					if len(posts) != 0 {
						for _, post := range posts {
							@components.Post(user, post)
						}
					} else {
						@components.Empty()
					}
				</div>
				<div class="flex flex-row items-center justify-center space-x-4 mt-8">
					@components.Linkedin(user.Linkedin)
					@components.Github(user.Github)
					@components.Email(user.Email)
				</div>
			</div>
		</main>
	}
}
